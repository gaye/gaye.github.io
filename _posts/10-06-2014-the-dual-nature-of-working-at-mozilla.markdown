---
layout: post
title: The Dual Nature of Working at Mozilla
description: A discussion of the dichotomy that exists when your job is to contribute to an open-source project.
tags: [Mozilla]
---

Mozilla isn't just an open-source project. Mozilla is also an organization with a mission that employs people. I have titles in both Mozilla the open-source project and Mozilla the organization. In the former, I am a module owner for [marionette js](https://developer.mozilla.org/en-US/Firefox_OS/Platform/Automated_testing/Gaia_integration_tests) and a peer for the firefox os [calendar app](https://github.com/mozilla-b2g/gaia/tree/master/apps/calendar). In the latter, I am a Software Engineer.
<br /><br />
I *love* that Mozilla pays developers to contribute to an open-source project. It helps many brilliant people feed their families while doing impactful, mission-driven work. Things can (and do) get murky, however, at the intersection of the Mozilla Corporation and open-source projects sponsored by and led by Mozilla. In the larger world of open-source, I have the mental framework that participants are either altruists or hobbyists. The situation is slightly more nuanced at Mozilla. Many MoCo employees are driven primarily by career and financial concerns.
<br /><br />
This needn't be a bad thing. There's no reason that people who are driven by their careers and their personal finances can't help Mozilla achieve its non-financial objectives. It does, however, create some weird situations when it comes to work responsibilities. I'm going to share a few of my experiences that have led me to think more deeply about my different roles and responsibilities.

### In My Experience

Last year, I worked on a framework which facilitates writing ui tests for firefox os apps using nodejs. I stopped actively developing it at the end of last year, primarily because it was working for people. Tests were being written and very few bugs were being filed against the framework. I shifted my focus to other problems. Every now and then, test writers will ping me for some guidance and I am happy to give it. It brings me joy to know that my work is being used to improve the quality and stability of apps running on firefox os. Even more seldom, someone will ask me about making the framework do something it doesn't already. I am always happy to guide them through the changes they would need to make in order for the framework to fit their use case.
<br /><br />
On one occasion however, a developer came to me with an issue he was running into using the framework in an experimental setting. I offered him some help, but cautioned that there wasn't "official support" for the way he was using the framework. He responded by telling me that the scenario in question was very important to his development process and asked me for a timeframe for the feature's completion. I told him that the framework wasn't under active development and that repurposing the framework for his use case wasn't a personal priority for me. I offered to mentor him through modifying the framework to work for his use case. At this point, he became very upset, told me that he was too busy to contribute, and asked who at Mozilla was responsible for implementing the features he needed from the framework. When I told him that I was a module owner for the framework, he told me that it was my responsibility to make the changes he needed because his work (and by extension my work) was serving a business need of Mozilla's.
<br /><br />
This situation poses an interesting question. Working on the testing framework was at least part of my job last year. When the framework worked for 99% of its users, I transitioned from fixing bugs and adding features to offering to support and mentor people in fixing their own problems. My attitude reflected the status of the framework as an open-source project. Perhaps, if I was thinking of providing support to users of the framework as my job in a more traditional sense, it would have made more sense to me to implement the feature this developer wanted, despite the fact that I did not feel motivated to do so in any altruistic or hobbyist sense.
<br /><br />
I am also the most active peer for the firefox os calendar app. I try to respond promptly to review requests, questions, security concerns, etc. I also try to respond to them in the order that I receive them. I have, at times, responded more quickly to the ones which particularly interest me as a hobbyist, but I try not to since I feel compelled as an altruist to encourage all contributors.
<br /><br />
One time (earlier this year) someone sent me a patch and I added it to my queue of things to do. A day later, their manager emailed me and my manager, urging me to review the patch. The request was totally reasonable if you take the perspective that I am a Mozilla employee and a manager at Mozilla was directing my work toward the end that he thought was most important for the organization. However, bumping that patch to the top of my review queue because someone's manager compelled me to is not the open-source way and undermines the contributors to my project from outside of Mozilla who don't have the power to write compelling emails to my manager and me. I obliged the manager's request, but not without feeling conflicted.
<br /><br />
Perhaps the strangest situations arise when people who wouldn't ordinarily do open-source but who are driven by career and financial aspirations are smashed together with open-source enthusiasts. I feel that I collaborate excellently with developers at Mozilla who are open-source developers in spirit and philosophy. I struggle when others' values and processes conflict with mine and the larger open-source software movement.
<br /><br />
### Intrinsic versus extrinsic motivation

I think what it comes down to, at least for me, is that Mozilla is almost always a great place to work for intrinsically motivated individuals. Open-source is largely about intrinsic motivation whereas I think that many more traditional software operations are driven by extrinsic motivation. Work activities and collaborations at Mozilla tend to revolve around developers' areas of interest. At more traditional software companies, work activities tend to revolve strictly around financial goals.

Mozilla does have financial goals but only insofar as they support continuing our progress towards our philosophical, non-financial ones (web literacy, privacy, security, transparency, availability, etc). My aesthetic is to trust developers at Mozilla to know how best to serve those normative goals. The purpose of Mozilla's managerial structure should, in my mind, be to find the greatest heroes of the open web and then step back and support them in doing the great things they're already doing.
